// Auto-generated. Do not edit!

// (in-package pal_interaction_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let asrresult = require('./asrresult.js');

//-----------------------------------------------------------

class ASRFileFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.recognised_utterance = null;
    }
    else {
      if (initObj.hasOwnProperty('recognised_utterance')) {
        this.recognised_utterance = initObj.recognised_utterance
      }
      else {
        this.recognised_utterance = new asrresult();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ASRFileFeedback
    // Serialize message field [recognised_utterance]
    bufferOffset = asrresult.serialize(obj.recognised_utterance, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ASRFileFeedback
    let len;
    let data = new ASRFileFeedback(null);
    // Deserialize message field [recognised_utterance]
    data.recognised_utterance = asrresult.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += asrresult.getMessageSize(object.recognised_utterance);
    return length;
  }

  static datatype() {
    // Returns string type for a message object
    return 'pal_interaction_msgs/ASRFileFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'e8f3da6b7eb47ddaa66e1eca614ca0be';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #feedback definition
    # At the inmediate time an utterance is recognised
    # it is published here.
    asrresult recognised_utterance
    
    
    ================================================================================
    MSG: pal_interaction_msgs/asrresult
    ## Message that containes the recognized utterance.
    ## Confidence values
    int8 CONFIDENCE_UNDEFINED = -1
    int8 CONFIDENCE_POOR = 1
    int8 CONFIDENCE_LOW  = 2
    int8 CONFIDENCE_GOOD = 3
    int8 CONFIDENCE_MAX  = 4
    
    # ASR result messages used by RosRecognizerServer
    
    # text recognized
    string text
    
    # confidence with values from POOR to MAX
    int8 confidence
    
    # start and end of the recognizer uterance.
    time start
    time end
    
    # list of recognized tags
    # key value pairs of strings extracted from the text
    # given the action tags placed in the grammar.
    actiontag[] tags
    
    ================================================================================
    MSG: pal_interaction_msgs/actiontag
    # Action tag contaings the key/value information genertated by parsing the recognised text with a JSGF grammar 
    
    string key
    string value
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ASRFileFeedback(null);
    if (msg.recognised_utterance !== undefined) {
      resolved.recognised_utterance = asrresult.Resolve(msg.recognised_utterance)
    }
    else {
      resolved.recognised_utterance = new asrresult()
    }

    return resolved;
    }
};

module.exports = ASRFileFeedback;
