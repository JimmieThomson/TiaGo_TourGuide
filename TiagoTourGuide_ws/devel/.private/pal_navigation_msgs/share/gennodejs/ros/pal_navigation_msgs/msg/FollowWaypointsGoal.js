// Auto-generated. Do not edit!

// (in-package pal_navigation_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let Waypoint = require('./Waypoint.js');

//-----------------------------------------------------------

class FollowWaypointsGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.goal_index = null;
      this.number_of_loops = null;
      this.bt_model_name = null;
      this.poses = null;
    }
    else {
      if (initObj.hasOwnProperty('goal_index')) {
        this.goal_index = initObj.goal_index
      }
      else {
        this.goal_index = 0;
      }
      if (initObj.hasOwnProperty('number_of_loops')) {
        this.number_of_loops = initObj.number_of_loops
      }
      else {
        this.number_of_loops = 0;
      }
      if (initObj.hasOwnProperty('bt_model_name')) {
        this.bt_model_name = initObj.bt_model_name
      }
      else {
        this.bt_model_name = '';
      }
      if (initObj.hasOwnProperty('poses')) {
        this.poses = initObj.poses
      }
      else {
        this.poses = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type FollowWaypointsGoal
    // Serialize message field [goal_index]
    bufferOffset = _serializer.uint32(obj.goal_index, buffer, bufferOffset);
    // Serialize message field [number_of_loops]
    bufferOffset = _serializer.uint32(obj.number_of_loops, buffer, bufferOffset);
    // Serialize message field [bt_model_name]
    bufferOffset = _serializer.string(obj.bt_model_name, buffer, bufferOffset);
    // Serialize message field [poses]
    // Serialize the length for message field [poses]
    bufferOffset = _serializer.uint32(obj.poses.length, buffer, bufferOffset);
    obj.poses.forEach((val) => {
      bufferOffset = Waypoint.serialize(val, buffer, bufferOffset);
    });
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type FollowWaypointsGoal
    let len;
    let data = new FollowWaypointsGoal(null);
    // Deserialize message field [goal_index]
    data.goal_index = _deserializer.uint32(buffer, bufferOffset);
    // Deserialize message field [number_of_loops]
    data.number_of_loops = _deserializer.uint32(buffer, bufferOffset);
    // Deserialize message field [bt_model_name]
    data.bt_model_name = _deserializer.string(buffer, bufferOffset);
    // Deserialize message field [poses]
    // Deserialize array length for message field [poses]
    len = _deserializer.uint32(buffer, bufferOffset);
    data.poses = new Array(len);
    for (let i = 0; i < len; ++i) {
      data.poses[i] = Waypoint.deserialize(buffer, bufferOffset)
    }
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += _getByteLength(object.bt_model_name);
    object.poses.forEach((val) => {
      length += Waypoint.getMessageSize(val);
    });
    return length + 16;
  }

  static datatype() {
    // Returns string type for a message object
    return 'pal_navigation_msgs/FollowWaypointsGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '6ac0bba57c7ff0865644730bc6d43f52';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Error codes
    # Note: The expected priority order of the errors should match the message order
    uint32 NONE=0
    uint32 UNKNOWN=600
    uint32 TASK_EXECUTOR_FAILED=601
    
    #goal definition
    uint32 goal_index
    uint32 number_of_loops
    string bt_model_name
    pal_navigation_msgs/Waypoint[] poses
    
    ================================================================================
    MSG: pal_navigation_msgs/Waypoint
    # Error codes
    # Note: The expected priority order of the errors should match the message order
    uint32 NOTHING=0
    uint32 WAIT=1
    uint32 ROTATE=2
    uint32 DOCK=3
    uint32 UNDOCK=4
    
    uint32[] actions
    geometry_msgs/PoseStamped pose
    ================================================================================
    MSG: geometry_msgs/PoseStamped
    # A Pose with reference coordinate frame and timestamp
    Header header
    Pose pose
    
    ================================================================================
    MSG: std_msgs/Header
    # Standard metadata for higher-level stamped data types.
    # This is generally used to communicate timestamped data 
    # in a particular coordinate frame.
    # 
    # sequence ID: consecutively increasing ID 
    uint32 seq
    #Two-integer timestamp that is expressed as:
    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
    # time-handling sugar is provided by the client library
    time stamp
    #Frame this data is associated with
    string frame_id
    
    ================================================================================
    MSG: geometry_msgs/Pose
    # A representation of pose in free space, composed of position and orientation. 
    Point position
    Quaternion orientation
    
    ================================================================================
    MSG: geometry_msgs/Point
    # This contains the position of a point in free space
    float64 x
    float64 y
    float64 z
    
    ================================================================================
    MSG: geometry_msgs/Quaternion
    # This represents an orientation in free space in quaternion form.
    
    float64 x
    float64 y
    float64 z
    float64 w
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new FollowWaypointsGoal(null);
    if (msg.goal_index !== undefined) {
      resolved.goal_index = msg.goal_index;
    }
    else {
      resolved.goal_index = 0
    }

    if (msg.number_of_loops !== undefined) {
      resolved.number_of_loops = msg.number_of_loops;
    }
    else {
      resolved.number_of_loops = 0
    }

    if (msg.bt_model_name !== undefined) {
      resolved.bt_model_name = msg.bt_model_name;
    }
    else {
      resolved.bt_model_name = ''
    }

    if (msg.poses !== undefined) {
      resolved.poses = new Array(msg.poses.length);
      for (let i = 0; i < resolved.poses.length; ++i) {
        resolved.poses[i] = Waypoint.Resolve(msg.poses[i]);
      }
    }
    else {
      resolved.poses = []
    }

    return resolved;
    }
};

// Constants for message
FollowWaypointsGoal.Constants = {
  NONE: 0,
  UNKNOWN: 600,
  TASK_EXECUTOR_FAILED: 601,
}

module.exports = FollowWaypointsGoal;
