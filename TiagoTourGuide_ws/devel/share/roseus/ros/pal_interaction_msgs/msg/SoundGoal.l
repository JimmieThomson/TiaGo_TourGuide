;; Auto-generated. Do not edit!


(when (boundp 'pal_interaction_msgs::SoundGoal)
  (if (not (find-package "PAL_INTERACTION_MSGS"))
    (make-package "PAL_INTERACTION_MSGS"))
  (shadow 'SoundGoal (find-package "PAL_INTERACTION_MSGS")))
(unless (find-package "PAL_INTERACTION_MSGS::SOUNDGOAL")
  (make-package "PAL_INTERACTION_MSGS::SOUNDGOAL"))

(in-package "ROS")
;;//! \htmlinclude SoundGoal.msg.html


(defclass pal_interaction_msgs::SoundGoal
  :super ros::object
  :slots (_text _lang_id _wait_before_speaking ))

(defmethod pal_interaction_msgs::SoundGoal
  (:init
   (&key
    ((:text __text) "")
    ((:lang_id __lang_id) "")
    ((:wait_before_speaking __wait_before_speaking) (instance ros::time :init))
    )
   (send-super :init)
   (setq _text (string __text))
   (setq _lang_id (string __lang_id))
   (setq _wait_before_speaking __wait_before_speaking)
   self)
  (:text
   (&optional __text)
   (if __text (setq _text __text)) _text)
  (:lang_id
   (&optional __lang_id)
   (if __lang_id (setq _lang_id __lang_id)) _lang_id)
  (:wait_before_speaking
   (&optional __wait_before_speaking)
   (if __wait_before_speaking (setq _wait_before_speaking __wait_before_speaking)) _wait_before_speaking)
  (:serialization-length
   ()
   (+
    ;; string _text
    4 (length _text)
    ;; string _lang_id
    4 (length _lang_id)
    ;; duration _wait_before_speaking
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _text
       (write-long (length _text) s) (princ _text s)
     ;; string _lang_id
       (write-long (length _lang_id) s) (princ _lang_id s)
     ;; duration _wait_before_speaking
       (write-long (send _wait_before_speaking :sec) s) (write-long (send _wait_before_speaking :nsec) s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _text
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _text (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _lang_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _lang_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; duration _wait_before_speaking
     (send _wait_before_speaking :sec (sys::peek buf ptr- :integer)) (incf ptr- 4)  (send _wait_before_speaking :nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get pal_interaction_msgs::SoundGoal :md5sum-) "a885e729fbf7cd3a957b93630532e7bf")
(setf (get pal_interaction_msgs::SoundGoal :datatype-) "pal_interaction_msgs/SoundGoal")
(setf (get pal_interaction_msgs::SoundGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
## .................
## DEPRECATED
## Please do not use this action as will be removed in the future.
## i18ntext.action together with pal_tts_cfg pkg is recomended instead.
## ---------------------------------------------------------------------
 
## goal definition
# Text to be spoken
string text
# Language of the given text in
# variable text.
# If empty the system will try to speak it in 
# the current system language that can be changed
# in wReemCommmander.
string lang_id
# Time to wait before starting to say the 
# given text. Default is zero.
duration wait_before_speaking

")



(provide :pal_interaction_msgs/SoundGoal "a885e729fbf7cd3a957b93630532e7bf")


