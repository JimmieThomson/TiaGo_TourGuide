; Auto-generated. Do not edit!


(cl:in-package pal_detection_msgs-msg)


;//! \htmlinclude RecognizeObjectsResult.msg.html

(cl:defclass <RecognizeObjectsResult> (roslisp-msg-protocol:ros-message)
  ((image
    :reader image
    :initarg :image
    :type sensor_msgs-msg:CompressedImage
    :initform (cl:make-instance 'sensor_msgs-msg:CompressedImage))
   (num_detections
    :reader num_detections
    :initarg :num_detections
    :type cl:fixnum
    :initform 0)
   (recognized_objects
    :reader recognized_objects
    :initarg :recognized_objects
    :type pal_detection_msgs-msg:RecognizedObjectArray
    :initform (cl:make-instance 'pal_detection_msgs-msg:RecognizedObjectArray)))
)

(cl:defclass RecognizeObjectsResult (<RecognizeObjectsResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <RecognizeObjectsResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'RecognizeObjectsResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name pal_detection_msgs-msg:<RecognizeObjectsResult> is deprecated: use pal_detection_msgs-msg:RecognizeObjectsResult instead.")))

(cl:ensure-generic-function 'image-val :lambda-list '(m))
(cl:defmethod image-val ((m <RecognizeObjectsResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader pal_detection_msgs-msg:image-val is deprecated.  Use pal_detection_msgs-msg:image instead.")
  (image m))

(cl:ensure-generic-function 'num_detections-val :lambda-list '(m))
(cl:defmethod num_detections-val ((m <RecognizeObjectsResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader pal_detection_msgs-msg:num_detections-val is deprecated.  Use pal_detection_msgs-msg:num_detections instead.")
  (num_detections m))

(cl:ensure-generic-function 'recognized_objects-val :lambda-list '(m))
(cl:defmethod recognized_objects-val ((m <RecognizeObjectsResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader pal_detection_msgs-msg:recognized_objects-val is deprecated.  Use pal_detection_msgs-msg:recognized_objects instead.")
  (recognized_objects m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <RecognizeObjectsResult>) ostream)
  "Serializes a message object of type '<RecognizeObjectsResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'image) ostream)
  (cl:let* ((signed (cl:slot-value msg 'num_detections)) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 65536) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    )
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'recognized_objects) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <RecognizeObjectsResult>) istream)
  "Deserializes a message object of type '<RecognizeObjectsResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'image) istream)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'num_detections) (cl:if (cl:< unsigned 32768) unsigned (cl:- unsigned 65536))))
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'recognized_objects) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<RecognizeObjectsResult>)))
  "Returns string type for a message object of type '<RecognizeObjectsResult>"
  "pal_detection_msgs/RecognizeObjectsResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'RecognizeObjectsResult)))
  "Returns string type for a message object of type 'RecognizeObjectsResult"
  "pal_detection_msgs/RecognizeObjectsResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<RecognizeObjectsResult>)))
  "Returns md5sum for a message object of type '<RecognizeObjectsResult>"
  "bcbaf988f66109a3344efd678c9c5f28")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'RecognizeObjectsResult)))
  "Returns md5sum for a message object of type 'RecognizeObjectsResult"
  "bcbaf988f66109a3344efd678c9c5f28")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<RecognizeObjectsResult>)))
  "Returns full string definition for message of type '<RecognizeObjectsResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# image: The resultant image with recognized objects~%sensor_msgs/CompressedImage image~%~%# num_detections: The number of detected objects~%int16 num_detections~%~%# Send the found objects, see the msg files for docs~%pal_detection_msgs/RecognizedObjectArray recognized_objects~%~%================================================================================~%MSG: sensor_msgs/CompressedImage~%# This message contains a compressed image~%~%Header header        # Header timestamp should be acquisition time of image~%                     # Header frame_id should be optical frame of camera~%                     # origin of frame should be optical center of camera~%                     # +x should point to the right in the image~%                     # +y should point down in the image~%                     # +z should point into to plane of the image~%~%string format        # Specifies the format of the data~%                     #   Acceptable values:~%                     #     jpeg, png~%uint8[] data         # Compressed image buffer~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: pal_detection_msgs/RecognizedObjectArray~%Header header~%~%# This message type describes a potential scene configuration: a set of objects that can explain the scene~%pal_detection_msgs/RecognizedObject[] objects~%~%================================================================================~%MSG: pal_detection_msgs/RecognizedObject~%# Contains information about the class of a found object, along with its confidence and ROI of detection~%~%# class: The respective class type of the found object~%string object_class~%~%# confidence: how sure you are it is that object and not another one.~%# It is between 0 and 1 and the closer to one it is the better~%float32 confidence~%~%# bounding_box: The region of the image, where the object is found~%sensor_msgs/RegionOfInterest bounding_box~%~%================================================================================~%MSG: sensor_msgs/RegionOfInterest~%# This message is used to specify a region of interest within an image.~%#~%# When used to specify the ROI setting of the camera when the image was~%# taken, the height and width fields should either match the height and~%# width fields for the associated image; or height = width = 0~%# indicates that the full resolution image was captured.~%~%uint32 x_offset  # Leftmost pixel of the ROI~%                 # (0 if the ROI includes the left edge of the image)~%uint32 y_offset  # Topmost pixel of the ROI~%                 # (0 if the ROI includes the top edge of the image)~%uint32 height    # Height of ROI~%uint32 width     # Width of ROI~%~%# True if a distinct rectified ROI should be calculated from the \"raw\"~%# ROI in this message. Typically this should be False if the full image~%# is captured (ROI not used), and True if a subwindow is captured (ROI~%# used).~%bool do_rectify~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'RecognizeObjectsResult)))
  "Returns full string definition for message of type 'RecognizeObjectsResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# image: The resultant image with recognized objects~%sensor_msgs/CompressedImage image~%~%# num_detections: The number of detected objects~%int16 num_detections~%~%# Send the found objects, see the msg files for docs~%pal_detection_msgs/RecognizedObjectArray recognized_objects~%~%================================================================================~%MSG: sensor_msgs/CompressedImage~%# This message contains a compressed image~%~%Header header        # Header timestamp should be acquisition time of image~%                     # Header frame_id should be optical frame of camera~%                     # origin of frame should be optical center of camera~%                     # +x should point to the right in the image~%                     # +y should point down in the image~%                     # +z should point into to plane of the image~%~%string format        # Specifies the format of the data~%                     #   Acceptable values:~%                     #     jpeg, png~%uint8[] data         # Compressed image buffer~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: pal_detection_msgs/RecognizedObjectArray~%Header header~%~%# This message type describes a potential scene configuration: a set of objects that can explain the scene~%pal_detection_msgs/RecognizedObject[] objects~%~%================================================================================~%MSG: pal_detection_msgs/RecognizedObject~%# Contains information about the class of a found object, along with its confidence and ROI of detection~%~%# class: The respective class type of the found object~%string object_class~%~%# confidence: how sure you are it is that object and not another one.~%# It is between 0 and 1 and the closer to one it is the better~%float32 confidence~%~%# bounding_box: The region of the image, where the object is found~%sensor_msgs/RegionOfInterest bounding_box~%~%================================================================================~%MSG: sensor_msgs/RegionOfInterest~%# This message is used to specify a region of interest within an image.~%#~%# When used to specify the ROI setting of the camera when the image was~%# taken, the height and width fields should either match the height and~%# width fields for the associated image; or height = width = 0~%# indicates that the full resolution image was captured.~%~%uint32 x_offset  # Leftmost pixel of the ROI~%                 # (0 if the ROI includes the left edge of the image)~%uint32 y_offset  # Topmost pixel of the ROI~%                 # (0 if the ROI includes the top edge of the image)~%uint32 height    # Height of ROI~%uint32 width     # Width of ROI~%~%# True if a distinct rectified ROI should be calculated from the \"raw\"~%# ROI in this message. Typically this should be False if the full image~%# is captured (ROI not used), and True if a subwindow is captured (ROI~%# used).~%bool do_rectify~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <RecognizeObjectsResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'image))
     2
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'recognized_objects))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <RecognizeObjectsResult>))
  "Converts a ROS message object to a list"
  (cl:list 'RecognizeObjectsResult
    (cl:cons ':image (image msg))
    (cl:cons ':num_detections (num_detections msg))
    (cl:cons ':recognized_objects (recognized_objects msg))
))
